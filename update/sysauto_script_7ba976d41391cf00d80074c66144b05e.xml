<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition/>
        <conditional>false</conditional>
        <name>Regulatory auto close pending</name>
        <run_as display_value="Service-Now Administrator">f87e589cdd79a000a7e1d1303d1995ca</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period>1970-01-04 00:00:00</run_period>
        <run_start>2017-09-14 15:47:16</run_start>
        <run_time>1970-01-01 11:00:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[sendPendingInputReminders();

function sendPendingInputReminders()
{
	// Constants - magic numbers and object names
	var requestTable   = "x_ahho_compliance_request";
	var autoCloseEvent = "x_ahho_compliance.request.autoclose"; 
	var autoCloseDelay = 1;  // in days
	
	var pendingRequest = new GlideRecord(requestTable);

	pendingRequest.addQuery('active', 'true');                     // active, not closed
	pendingRequest.addQuery('state', 5);                           // pending
	pendingRequest.addQuery('pending_reason', '=', '1');           // Waiting on info - Requestor
	pendingRequest.addQuery('pending_reminder_number', '=', '6');  // Final reminder sent	
	pendingRequest.query();
	
	// Process matching records to fire appropriate events
	while (pendingRequest.next()) {

		var lastReminderDate;
		var shouldSendAutoClose;

		// Get last reminder date from the record
		lastReminderDate = new GlideDateTime(pendingRequest.getValue('pending_reminder_last_sent'));

		// Only send reminder if enough time has elapsed
		shouldSendAutoClose = lastReminderDate <= gs.daysAgo(autoCloseDelay);

		if (shouldSendAutoClose)
		{
			// Send event for auto close
			gs.eventQueue(autoCloseEvent, pendingRequest, pendingRequest.number );		

			// Update record with last reminder sent info
			pendingRequest.pending_reminder_number    = 7;                // increment 
			pendingRequest.pending_reminder_last_sent = new GlideDate();  // today
			pendingRequest.update();
		}
	}
}	]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>tlWeyer</sys_created_by>
        <sys_created_on>2017-09-15 13:42:04</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>7ba976d41391cf00d80074c66144b05e</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Regulatory auto close pending</sys_name>
        <sys_package display_value="Regulatory Compliance" source="x_ahho_compliance">8c730111133f7a00cb92b7a66144b0f1</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Regulatory Compliance">8c730111133f7a00cb92b7a66144b0f1</sys_scope>
        <sys_update_name>sysauto_script_7ba976d41391cf00d80074c66144b05e</sys_update_name>
        <sys_updated_by>tlWeyer</sys_updated_by>
        <sys_updated_on>2017-09-15 15:37:32</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
